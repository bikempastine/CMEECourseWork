Starting code feedback for Bikem, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 8.76 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: .git, MiniProject, week7, Groupwork, week3, week2, Feedback, week1

Found the following files in parent directory: README.md, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
*~
*.tmp

.csv
.log

# Python
*.py[co]
__pycache__/

#Jupyter
.ipynb_checkpoints/

# R History files
.Rhistory
.Rapp.history

# R Session Data files
.RData

## Core latex/pdflatex auxiliary files:
*.aux
*.lof
*.log
*.lot
*.fls
*.out
*.toc
*.fmt
*.fot
*.cb
*.cb2
.*.lb

## Intermediate documents:
*.dvi
*.xdv
*-converted-to.*
# these rules might exclude image files for figures etc.
# *.ps
# *.eps
# *.pdf

## Generated if empty string is given at "Please type another file name for output:"
.pdf

## Bibliography auxiliary files (bibtex/biblatex/biber):
*.bbl
*.bcf
*.blg
*-blx.aux
*-blx.bib
*.run.xml

## Build tool auxiliary files:
*.fdb_latexmk
*.synctex
*.synctex(busy)
*.synctex.gz
*.synctex.gz(busy)
*.pdfsync

**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# My CMEE Coursework Repository

### Description
This is Bikem Pastine's repository for the Coputational Methods in Ecology and Evolution Master's program. Each week the repository will be updated with the coursework for the prvious week for marking. 

### Instructions
To check the weeks assignement, clone the directory for that week and run the code within the 'code' folder. The code may prompt for inputs. Appropriate example inputs can be found in the 'data' folder. The outupts of the code can be found in the 'results' folder once the code is run. 

### Contents
| Submission  |      Learning Objectives      |  Link |
|----------|:-------------:|------:|
| Week 1 |  UNIX and LINUX, Bash scripting, LaTeX | [here](https://github.com/bikempastine/CMEECourseWork/tree/main/week1) |
| Week 2 |   Biological Computing in Python    |   [here](https://github.com/bikempastine/CMEECourseWork/tree/main/week2) |
| Week 3 |   Biological Computing in R   |   [here](https://github.com/bikempastine/CMEECourseWork/tree/main/week3) |
| Week 7 |   Biological Computing in Python 2    |   [here](https://github.com/bikempastine/CMEECourseWork/tree/main/week7) |
| MiniProject |  Computing project comparing linear and nonlinear model preformance   |   [here](https://github.com/bikempastine/CMEECourseWork/tree/main/MiniProject) |
| Feedback |   Feedback on the submitted work    |   [here](https://github.com/bikempastine/CMEECourseWork/tree/main/Feedback) |
### Contact
Bikem Pastine: bp222@ic.ac.uk

Director for the CMEE is course: [mhasoba](https://github.com/mhasoba/TheMulQuaBio)

**********************************************************************

======================================================================
Looking for the weekly directories...

Found 4 weekly directories: week1, week2, week3, week7

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: code, sandbox, results, data

Found the following files: README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# Week 1: UNIX, Bash, and LaTeX

### Description
This week focused on the basics of UNIX, Bash shell scripting, and LaTeX.

### Instructions
Run the code within the 'code' folder. The code may prompt for inputs. Appropriate example inputs can be found in the 'data' folder. The outupts of the code can be found in the 'results' folder once the code is run. 

### Contents
| Submission  |      Learning Objectives      |  Link |
|----------|:-------------:|------:|
| boilerplate.sh |  Boilerplate bash script | [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/boilerplate.sh) |
| CompileLatex.sh |   Compiles .tex files to produce pdf files   |   [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/CompileLaTex.sh) |
| ConcatenateTwoFiles.sh |   Concatenate two files one under another to produce a new file  |   [here](https://github.com/bikempastine/CMEECourseWork/tree/main/week2) |
| CountLines.sh |   Counts the number of lines in a file  |   [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/ConcatenateTwoFiles.sh) |
|  csvtospace.sh |  Converts all .csv files in a folder to .txt files   |   [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/csvtospace.sh) |
| FirstBiblio.bib |   LaTeX bibliography for the FistExample.tex document  |   [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/FirstBiblio.bib) |
| FirstExample.tex |   LaTeX code to produce an example document  |   [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/FirstExample.tex) |
| MyExampleScript.sh |   Demonstrates the  $USER environmental variable in bash  |   [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/MyExampleScript.sh) |
| tabtocsv.sh |   Converts .txt files to .csv files  |   [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/tabtocsv.sh) |
| tiff2png.sh |   Converts .tiff files to .png files  |   [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/tiff2png.sh) |
| UnixPract1.txt |   Calulates the answers for the FASTA excerisise in the UNIX and Bash chapter  |   [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/UnixPract1.txt) |
| variables.sh |  Demonstates variables in bash  |   [here](https://github.com/bikempastine/CMEECourseWork/blob/main/week1/code/variables.sh) |
### Contact
Bikem Pastine: bp222@ic.ac.uk

Director for the CMEE is course: [mhasoba](https://github.com/mhasoba/TheMulQuaBio)
**********************************************************************

Results directory is empty - good! 

Found 12 code files: tiff2png.sh, CountLines.sh, FirstBiblio.bib, tabtocsv.sh, variables.sh, FirstExample.tex, boilerplate.sh, CompileLaTex.sh, csvtospace.sh, ConcatenateTwoFiles.sh, UnixPract1.txt, MyExampleScript.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Bikem bp222@ic.ac.uk
# Script: Change tiff files to png files
# Arguments: 0
# Date: Oct 2022

for f in ../data/TiffFiles/*.tiff;
    do 
    echo "Converting $f";
    convert "$f"  "$(basename "$f" .tiff).png";

    echo "Moving $f to results folder";
    mv "$(basename "$f" .tiff).png" ../results;

    echo "Done!"

    done


#exit
**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
Converting ../data/TiffFiles/example.tiff
Moving ../data/TiffFiles/example.tiff to results folder
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.25196s

======================================================================
Inspecting script file CountLines.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Bikem bp222@ic.ac.uk
# Script: Count the number of lines in a file
# Arguments: 1 -> file
# Date: Oct 2022

if [ $# -eq 1 ] #check if an argument is supplied
then 
    NumLines=`wc -l < $1`  #count number of lines in the file suplied in the argument
    echo "The file $1 has $NumLines lines" #print the number of lines in file
else

    echo "incorrect number of files supplied. Please supply one file at a time to count the number of lines." #if argument is not supplied print this message
fi


#exit

**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 


**********************************************************************
incorrect number of files supplied. Please supply one file at a time to count the number of lines.

**********************************************************************

Code ran without errors

Time consumed = 0.00315s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:

**********************************************************************
@article{verhulst1838notice,
  title={Notice on the law that the population follows in its growth},
  author={Verhulst, PF},
  journal={Corresp Math Phys},
  volume={10},
  pages={113--26},
  year={1838}
}
**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Bikem bp222@ic.ac.uk
# Script: Substitute the tabs in files for commas and saves as csv
# Arguments: 1 -> txt file
# Date: Oct 2022

if [ $# -eq 1 ] && [[ $1 == *.txt ]] #check if only one argument is suplied and is a txt file
then 
    echo "Creating a comma delimited version of $1 ..."
    cat $1 | tr -s "/t" "," >> $1.csv #change tabs to commas and save as csv 
    echo "Done!"
else
    echo "Please supply one .txt file for conversion into .csv"
    
    fi


#exit
**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
Please supply one .txt file for conversion into .csv

**********************************************************************

Code ran without errors

Time consumed = 0.00353s

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/sh
# NAME: Bikem
# SCRIPT: variablestest.sh
# DESC: Learning about variables
# ARG: none
# DATE: Oct 2022

# Special variables
echo "This script was called with $# parameters"
echo "The script's name is $0"
echo "The arguments are $@"
echo "The first argument is $1"
echo "The second argument is $2"

# Assigned Variables
MY_VAR='some string'
echo 'the current value of the variable is' $MY_VAR
echo
echo 'Please enter a new string'
read MY_VAR
echo
echo 'the current value of the variable is' $MY_VAR
echo

# Assigned Variables (Reading multiple vales from user imput)
echo 'Enter two numbers seperated by spaces'
read a b
echo
echo 'you entered' $a 'and' $b 
echo 'Their sum is:'

# Command substitution
MY_SUM=$(expr $a + $b)
echo $MY_SUM
#end

**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
This script was called with 0 parameters
The script's name is variables.sh
The arguments are 
The first argument is 
The second argument is 
the current value of the variable is some string

Please enter a new string

the current value of the variable is

Enter two numbers seperated by spaces

you entered and
Their sum is:


**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

expr: syntax error: missing argument after ‘+’

======================================================================
Inspecting script file FirstExample.tex...

File contents are:

**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\author{Bikem Pastine}

\date{week 1 Oct 2022}

\begin{document}
  \maketitle
  
  \begin{abstract}
    This paper analyzes a seminal equation in population biology.
  \end{abstract}
  
  \section{Introduction}
    Blah Blah
  
  \section{Materials \& Methods}
  
  A foundational equation of population biology is:
  
  \begin{equation}
    \frac{dN}{dt} = r N (1 - \frac{N}{K})
  \end{equation}
  
  It was first proposed by Verhulst in 1838 \cite{verhulst1838notice}.
  
  \bibliographystyle{plain}
  
  \bibliography{FirstBiblio}

\end{document}
**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Bikem Pastine bp222@ic.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
#Date: Oct 2022

echo -e "\nThis is a shell script! \n"

#exit
**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00362s

======================================================================
Inspecting script file CompileLaTex.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Bikem bp222@ic.ac.uk
# Script: compile LaTeX files
# Arguments: 1 -> LaTeX file
# Date: Oct 2022

#allow imput to be full filename including extension
filename=`echo "${1%.*}"`
echo "$filename"

#Compile file
pdflatex $filename.tex
bibtex $filename
pdflatex $filename.tex
pdflatex $filename.tex

#move output to the results section and open file
mv $filename.pdf ../results/$filename.pdf
evince ../results/$filename.pdf &


##Cleanup
rm *.aux
rm *.log
rm *.bbl
rm *.blg

#exit

**********************************************************************

Testing CompileLaTex.sh...

Output (only first 500 characters): 


**********************************************************************

This is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2022/dev/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2021-11-15> patch level 1
L3 programming layer <2022-01-21> File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2022/dev/Debian) (preloaded
**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
mv: cannot stat '.pdf': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.bbl': No such file or directory
rm: cannot remove '*.blg': No such file or directory

(evince:222535): Handy-WARNING **: 15:18:27.499: Using GtkSettings:gtk-application-prefer-dark-theme together with HdyStyleManager is unsupported. Please use HdyStyleManager:color-scheme instead.

** (evince:222535): WARNING **: 15:18:27.719: Error when getting information for file “/home/mhasoba/Documents/Teaching/IC_CMEE/2022-23/Coursework/StudentRepos/BikemPastine_/week1/results/.pdf”: No such file or directory

** (evince:222535): WARNING **: 15:18:27.720: set_filenames: Error when getting information for file “/home/mhasoba/Documents/Teaching/IC_CMEE/2022-23/Coursework/StudentRepos/BikemPastine_/week1/results/.pdf”: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.745: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.753: Error setting file metadata: No such file or directory

** (evince:222535): WARNING **: 15:18:27.753: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Bikem bp222@ic.ac.uk
# Script: Substitute the commas in files for spaces and saves csv as txt file
# Arguments: 1 -> file path for folder holding temperature csv files
# Date: Oct 2022


if [ -d "$1" ] #check if argument suplied is a directory
then 
    for FILE in $1/*.csv #run for all files in the spesified file path with a csv file path
        do 
        echo "Converting $FILE to .txt file" #print file names that will be converted
        cat $FILE | tr "," " " >> "${FILE%.csv}.txt"; #for each file replace commas with spaces and save file with txt file path rathr than csv path
        mv "${FILE%.csv}.txt" ../results
    done
    echo
    echo "Files converted and saved in results!"
else
    echo "Error: incorrect argument supplied. Please enter the directory path containing .csv files to be converted." #if argument is not a directory then return this message
fi


#exit
**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
Error: incorrect argument supplied. Please enter the directory path containing .csv files to be converted.

**********************************************************************

Code ran without errors

Time consumed = 0.00324s

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Bikem bp222@ic.ac.uk
# Script: Merge two files to produce a third
# Arguments: 3 -> 2 files to be merged and the new path for the output
# Date: Oct 2022

if [ $# -eq 2 ]  #check if the number of arguments supplied is 2
then 
    if [[ "${1: -3}" == "${2: -3}" ]] #check if the file types are the same by comparing the final 3 characters of the file
    then
        echo "First file is $1, Second file is $2"
        echo "Please enter the filepath and name of the new merged file."
        read outputname
        echo 
        echo "Merged file will be saved as $outputname"
        echo
        cat $1 > $outputname #copy contents of file 1 to new file
        cat $2 >> $outputname  #add file 2 to the end of the newly created file 3, after file 1
        echo "Merged File:"
        cat $outputname
        echo
        echo "Merged!"
    else
        echo "Error: file types are different, please enter files of the same type."
        fi
else
    echo "Error: incorrect number of files supplied, please supply only two files to merge." 
    fi


#exit
**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
Error: incorrect number of files supplied, please supply only two files to merge.

**********************************************************************

Code ran without errors

Time consumed = 0.00262s

======================================================================
Inspecting script file UnixPract1.txt...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Bikem Pastine bp222@ic.ac.uk
# Script: UnixPract1
# Desc: First UNIX FASTA file practical
# Arguments: none
# Date: Oct 2022

#The answers to the FASTA practical

#1: Count how many lines there are in each file
wc -l ../data/fasta/E.coli.fasta ; wc -l ../data/fasta/407228412.fasta ; wc -l ../data/fasta/407228326.fasta

#2: Print everything starting from the second line for the E. coli genome
awk 'NR>1' ../data/fasta/E.coli.fasta

#3 Count the sequence length of this genome
awk 'NR>1' ../data/fasta/E.coli.fasta | tr -d '\n' | wc -m

#4 Count the matches of a particular sequence, “ATGC” in the genome of E. coli 
awk 'NR>1' ../data/fasta/E.coli.fasta | tr -d '\n' | grep -o ATGC |wc -l 

#5 Compute the AT/GC ratio. 
AT=$(awk 'NR>1' ../data/fasta/E.coli.fasta | tr -d '\n' | grep -o 'A\|T' |wc -l) && GC=$(awk 'NR>1' ../data/fasta/E.coli.fasta | tr -d '\n' | grep -o 'C\|G' |wc -l) && awk "BEGIN {x=$AT; y=$GC; z=x/y; print z}"
###set internal/temporary variables for the count of AT and GC and pipe with &&, use these to calculate the ratio between AT and GC using awk to perform arithmatic


**********************************************************************

Testing UnixPract1.txt...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:

**********************************************************************
#!/bin/bash
# NAME: Bikem
# SCRIPT: MyExampleScript.sh
# DESC: Learning about variables - $USER environmental var
# ARG: none
# DATE: Oct 2022

MSG1="Hello"
MSG2=$USERbash 
echo "$MSG1 $MSG2"
# another way to print the above message
echo "Hello $USER"
echo

#end
**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 


**********************************************************************
Hello 
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00285s

======================================================================
======================================================================
Finished running scripts

Ran into 2 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 100

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!